{
	"declares": [
		{
			"kind": "variable",
			"description": "*********************************************\r\n                                              *\r\n                  GLOBAL                      *\r\n                                              *\r\n**********************************************",
			"name": "process",
			"type": "NodeJS.Process"
		},
		{
			"kind": "variable",
			"name": "global",
			"type": "any"
		},
		{
			"kind": "variable",
			"name": "__filename",
			"type": "string"
		},
		{
			"kind": "variable",
			"name": "__dirname",
			"type": "string"
		},
		{
			"kind": "function",
			"name": "setTimeout",
			"parameters": [
				{
					"name": "callback",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "args",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "any"
								}
							}
						],
						"returns": "void"
					}
				},
				{
					"name": "ms",
					"type": "number"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "NodeJS.Timer"
		},
		{
			"kind": "function",
			"name": "clearTimeout",
			"parameters": [
				{
					"name": "timeoutId",
					"type": "NodeJS.Timer"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "setInterval",
			"parameters": [
				{
					"name": "callback",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "args",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "any"
								}
							}
						],
						"returns": "void"
					}
				},
				{
					"name": "ms",
					"type": "number"
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "NodeJS.Timer"
		},
		{
			"kind": "function",
			"name": "clearInterval",
			"parameters": [
				{
					"name": "intervalId",
					"type": "NodeJS.Timer"
				}
			],
			"returns": "void"
		},
		{
			"kind": "function",
			"name": "setImmediate",
			"parameters": [
				{
					"name": "callback",
					"type": {
						"kind": "function",
						"parameters": [
							{
								"name": "args",
								"rest": true,
								"type": {
									"kind": "array",
									"type": "any"
								}
							}
						],
						"returns": "void"
					}
				},
				{
					"name": "args",
					"rest": true,
					"type": {
						"kind": "array",
						"type": "any"
					}
				}
			],
			"returns": "any"
		},
		{
			"kind": "function",
			"name": "clearImmediate",
			"parameters": [
				{
					"name": "immediateId",
					"type": "any"
				}
			],
			"returns": "void"
		},
		{
			"kind": "variable",
			"name": "require",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "call",
						"parameters": [
							{
								"name": "id",
								"type": "string"
							}
						],
						"returns": "any"
					},
					{
						"kind": "method",
						"name": "resolve",
						"parameters": [
							{
								"name": "id",
								"type": "string"
							}
						],
						"returns": "string"
					},
					{
						"kind": "property",
						"name": "cache",
						"type": "any"
					},
					{
						"kind": "property",
						"name": "extensions",
						"type": "any"
					},
					{
						"kind": "property",
						"name": "main",
						"type": "any"
					}
				]
			}
		},
		{
			"kind": "variable",
			"name": "module",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "property",
						"name": "exports",
						"type": "any"
					},
					{
						"kind": "method",
						"name": "require",
						"parameters": [
							{
								"name": "id",
								"type": "string"
							}
						],
						"returns": "any"
					},
					{
						"kind": "property",
						"name": "id",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "filename",
						"type": "string"
					},
					{
						"kind": "property",
						"name": "loaded",
						"type": "boolean"
					},
					{
						"kind": "property",
						"name": "parent",
						"type": "any"
					},
					{
						"kind": "property",
						"name": "children",
						"type": {
							"kind": "array",
							"type": "any"
						}
					}
				]
			}
		},
		{
			"kind": "variable",
			"name": "exports",
			"type": "any"
		},
		{
			"kind": "variable",
			"name": "SlowBuffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "str",
								"type": "string"
							},
							{
								"name": "encoding",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "size",
								"type": "number"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "size",
								"type": "Uint8Array"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "any"
								}
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Buffer"
					},
					{
						"kind": "method",
						"name": "isBuffer",
						"parameters": [
							{
								"name": "obj",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "method",
						"name": "byteLength",
						"parameters": [
							{
								"name": "string",
								"type": "string"
							},
							{
								"name": "encoding",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "number"
					},
					{
						"kind": "method",
						"name": "concat",
						"parameters": [
							{
								"name": "list",
								"type": {
									"kind": "array",
									"type": "Buffer"
								}
							},
							{
								"name": "totalLength",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Buffer"
					}
				]
			}
		},
		{
			"kind": "interface",
			"name": "Buffer",
			"extends": [
				"NodeBuffer"
			]
		},
		{
			"kind": "variable",
			"name": "Buffer",
			"type": {
				"kind": "object",
				"signatures": [
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "str",
								"type": "string"
							},
							{
								"name": "encoding",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "size",
								"type": "number"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "size",
								"type": "Uint8Array"
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "constructor",
						"parameters": [
							{
								"name": "array",
								"type": {
									"kind": "array",
									"type": "any"
								}
							}
						],
						"returns": "Buffer"
					},
					{
						"kind": "property",
						"name": "prototype",
						"type": "Buffer"
					},
					{
						"kind": "method",
						"name": "isBuffer",
						"parameters": [
							{
								"name": "obj",
								"type": "any"
							}
						],
						"returns": "boolean"
					},
					{
						"kind": "method",
						"name": "byteLength",
						"parameters": [
							{
								"name": "string",
								"type": "string"
							},
							{
								"name": "encoding",
								"optional": true,
								"type": "string"
							}
						],
						"returns": "number"
					},
					{
						"kind": "method",
						"name": "concat",
						"parameters": [
							{
								"name": "list",
								"type": {
									"kind": "array",
									"type": "Buffer"
								}
							},
							{
								"name": "totalLength",
								"optional": true,
								"type": "number"
							}
						],
						"returns": "Buffer"
					}
				]
			}
		},
		{
			"kind": "module",
			"name": "NodeJS",
			"description": "*********************************************\r\n                                              *\r\n              GLOBAL INTERFACES               *\r\n                                              *\r\n**********************************************",
			"declares": [
				{
					"kind": "interface",
					"name": "ErrnoException",
					"extends": [
						"Error"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "errno",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "code",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "path",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "syscall",
							"optional": true,
							"type": "string"
						}
					]
				},
				{
					"kind": "interface",
					"name": "EventEmitter",
					"signatures": [
						{
							"kind": "method",
							"name": "addListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "on",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "once",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "removeListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "removeAllListeners",
							"parameters": [
								{
									"name": "event",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "setMaxListeners",
							"parameters": [
								{
									"name": "n",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "listeners",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								}
							],
							"returns": {
								"kind": "array",
								"type": "Function"
							}
						},
						{
							"kind": "method",
							"name": "emit",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "args",
									"rest": true,
									"type": {
										"kind": "array",
										"type": "any"
									}
								}
							],
							"returns": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ReadableStream",
					"extends": [
						"EventEmitter"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "readable",
							"type": "boolean"
						},
						{
							"kind": "method",
							"name": "read",
							"parameters": [
								{
									"name": "size",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"type": "T"
								},
								{
									"name": "options",
									"optional": true,
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "end",
												"optional": true,
												"type": "boolean"
											}
										]
									}
								}
							],
							"returns": "T"
						},
						{
							"kind": "method",
							"name": "unpipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"optional": true,
									"type": "T"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "Buffer"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "wrap",
							"parameters": [
								{
									"name": "oldStream",
									"type": "ReadableStream"
								}
							],
							"returns": "ReadableStream"
						}
					]
				},
				{
					"kind": "interface",
					"name": "WritableStream",
					"extends": [
						"EventEmitter"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "writable",
							"type": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ReadWriteStream",
					"extends": [
						"ReadableStream",
						"WritableStream"
					]
				},
				{
					"kind": "interface",
					"name": "Process",
					"extends": [
						"EventEmitter"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "stdout",
							"type": "WritableStream"
						},
						{
							"kind": "property",
							"name": "stderr",
							"type": "WritableStream"
						},
						{
							"kind": "property",
							"name": "stdin",
							"type": "ReadableStream"
						},
						{
							"kind": "property",
							"name": "argv",
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"kind": "property",
							"name": "execPath",
							"type": "string"
						},
						{
							"kind": "method",
							"name": "abort",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "chdir",
							"parameters": [
								{
									"name": "directory",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "cwd",
							"returns": "string"
						},
						{
							"kind": "property",
							"name": "env",
							"type": "any"
						},
						{
							"kind": "method",
							"name": "exit",
							"parameters": [
								{
									"name": "code",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "getgid",
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "setgid",
							"parameters": [
								{
									"name": "id",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setgid",
							"parameters": [
								{
									"name": "id",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "getuid",
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "setuid",
							"parameters": [
								{
									"name": "id",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setuid",
							"parameters": [
								{
									"name": "id",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "version",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "versions",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "http_parser",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "node",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "v8",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "ares",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "uv",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "zlib",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "openssl",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "property",
							"name": "config",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "target_defaults",
										"type": {
											"kind": "object",
											"signatures": [
												{
													"kind": "property",
													"name": "cflags",
													"type": {
														"kind": "array",
														"type": "any"
													}
												},
												{
													"kind": "property",
													"name": "default_configuration",
													"type": "string"
												},
												{
													"kind": "property",
													"name": "defines",
													"type": {
														"kind": "array",
														"type": "string"
													}
												},
												{
													"kind": "property",
													"name": "include_dirs",
													"type": {
														"kind": "array",
														"type": "string"
													}
												},
												{
													"kind": "property",
													"name": "libraries",
													"type": {
														"kind": "array",
														"type": "string"
													}
												}
											]
										}
									},
									{
										"kind": "property",
										"name": "variables",
										"type": {
											"kind": "object",
											"signatures": [
												{
													"kind": "property",
													"name": "clang",
													"type": "number"
												},
												{
													"kind": "property",
													"name": "host_arch",
													"type": "string"
												},
												{
													"kind": "property",
													"name": "node_install_npm",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_install_waf",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_prefix",
													"type": "string"
												},
												{
													"kind": "property",
													"name": "node_shared_openssl",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_shared_v8",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_shared_zlib",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_use_dtrace",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_use_etw",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "node_use_openssl",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "target_arch",
													"type": "string"
												},
												{
													"kind": "property",
													"name": "v8_no_strict_aliasing",
													"type": "number"
												},
												{
													"kind": "property",
													"name": "v8_use_snapshot",
													"type": "boolean"
												},
												{
													"kind": "property",
													"name": "visibility",
													"type": "string"
												}
											]
										}
									}
								]
							}
						},
						{
							"kind": "method",
							"name": "kill",
							"parameters": [
								{
									"name": "pid",
									"type": "number"
								},
								{
									"name": "signal",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "pid",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "title",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "arch",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "platform",
							"type": "string"
						},
						{
							"kind": "method",
							"name": "memoryUsage",
							"returns": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "rss",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "heapTotal",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "heapUsed",
										"type": "number"
									}
								]
							}
						},
						{
							"kind": "method",
							"name": "nextTick",
							"parameters": [
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "umask",
							"parameters": [
								{
									"name": "mask",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "uptime",
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "hrtime",
							"parameters": [
								{
									"name": "time",
									"optional": true,
									"type": {
										"kind": "array",
										"type": "number"
									}
								}
							],
							"returns": {
								"kind": "array",
								"type": "number"
							}
						},
						{
							"kind": "method",
							"name": "send",
							"optional": true,
							"parameters": [
								{
									"name": "message",
									"type": "any"
								},
								{
									"name": "sendHandle",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Timer",
					"signatures": [
						{
							"kind": "method",
							"name": "ref",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unref",
							"returns": "void"
						}
					]
				}
			]
		},
		{
			"kind": "interface",
			"name": "NodeBuffer",
			"signatures": [
				{
					"kind": "index",
					"parameter": {
						"name": "index",
						"type": "number"
					},
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "write",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						},
						{
							"name": "length",
							"optional": true,
							"type": "number"
						},
						{
							"name": "encoding",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "toString",
					"parameters": [
						{
							"name": "encoding",
							"optional": true,
							"type": "string"
						},
						{
							"name": "start",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "string"
				},
				{
					"kind": "method",
					"name": "toJSON",
					"returns": "any"
				},
				{
					"kind": "property",
					"name": "length",
					"type": "number"
				},
				{
					"kind": "method",
					"name": "copy",
					"parameters": [
						{
							"name": "targetBuffer",
							"type": "Buffer"
						},
						{
							"name": "targetStart",
							"optional": true,
							"type": "number"
						},
						{
							"name": "sourceStart",
							"optional": true,
							"type": "number"
						},
						{
							"name": "sourceEnd",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "slice",
					"parameters": [
						{
							"name": "start",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "Buffer"
				},
				{
					"kind": "method",
					"name": "readUInt8",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAsset",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readUInt16LE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readUInt16BE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readUInt32LE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readUInt32BE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readInt8",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readInt16LE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readInt16BE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readInt32LE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readInt32BE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readFloatLE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readFloatBE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readDoubleLE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "readDoubleBE",
					"parameters": [
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "number"
				},
				{
					"kind": "method",
					"name": "writeUInt8",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeUInt16LE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeUInt16BE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeUInt32LE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeUInt32BE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeInt8",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeInt16LE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeInt16BE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeInt32LE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeInt32BE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeFloatLE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeFloatBE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeDoubleLE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "writeDoubleBE",
					"parameters": [
						{
							"name": "value",
							"type": "number"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "noAssert",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "void"
				},
				{
					"kind": "method",
					"name": "fill",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						},
						{
							"name": "offset",
							"optional": true,
							"type": "number"
						},
						{
							"name": "end",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "module",
			"name": "buffer",
			"external": true,
			"description": "*********************************************\r\n                                              *\r\n                  MODULES                     *\r\n                                              *\r\n**********************************************",
			"declares": [
				{
					"kind": "variable",
					"name": "INSPECT_MAX_BYTES",
					"type": "number"
				}
			]
		},
		{
			"kind": "module",
			"name": "querystring",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "stringify",
					"parameters": [
						{
							"name": "obj",
							"type": "any"
						},
						{
							"name": "sep",
							"optional": true,
							"type": "string"
						},
						{
							"name": "eq",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "parse",
					"parameters": [
						{
							"name": "str",
							"type": "string"
						},
						{
							"name": "sep",
							"optional": true,
							"type": "string"
						},
						{
							"name": "eq",
							"optional": true,
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "maxKeys",
										"optional": true,
										"type": "number"
									}
								]
							}
						}
					],
					"returns": "any"
				},
				{
					"kind": "function",
					"name": "escape",
					"returns": "any"
				},
				{
					"kind": "function",
					"name": "unescape",
					"returns": "any"
				}
			]
		},
		{
			"kind": "module",
			"name": "events",
			"external": true,
			"declares": [
				{
					"kind": "class",
					"name": "EventEmitter",
					"implements": [
						"NodeJS.EventEmitter"
					],
					"members": [
						{
							"kind": "method",
							"name": "listenerCount",
							"static": true,
							"parameters": [
								{
									"name": "emitter",
									"type": "EventEmitter"
								},
								{
									"name": "event",
									"type": "string"
								}
							],
							"returns": "number"
						},
						{
							"kind": "method",
							"name": "addListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "on",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "once",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "removeListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "removeAllListeners",
							"parameters": [
								{
									"name": "event",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "EventEmitter"
						},
						{
							"kind": "method",
							"name": "setMaxListeners",
							"parameters": [
								{
									"name": "n",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "listeners",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								}
							],
							"returns": {
								"kind": "array",
								"type": "Function"
							}
						},
						{
							"kind": "method",
							"name": "emit",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "args",
									"rest": true,
									"type": {
										"kind": "array",
										"type": "any"
									}
								}
							],
							"returns": "boolean"
						}
					]
				}
			]
		},
		{
			"kind": "module",
			"name": "http",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "import",
					"name": "net",
					"require": "net"
				},
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "interface",
					"name": "Server",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "hostname",
									"optional": true,
									"type": "string"
								},
								{
									"name": "backlog",
									"optional": true,
									"type": "number"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "path",
									"type": "string"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "handle",
									"type": "any"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "close",
							"parameters": [
								{
									"name": "cb",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "address",
							"returns": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "port",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "family",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "address",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "property",
							"name": "maxHeadersCount",
							"type": "number"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ServerRequest",
					"extends": [
						"events.EventEmitter",
						"stream.Readable"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "method",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "url",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "headers",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "trailers",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "httpVersion",
							"type": "string"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "connection",
							"type": "net.Socket"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ServerResponse",
					"extends": [
						"events.EventEmitter",
						"stream.Writable"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "fd",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "writeContinue",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "writeHead",
							"parameters": [
								{
									"name": "statusCode",
									"type": "number"
								},
								{
									"name": "reasonPhrase",
									"optional": true,
									"type": "string"
								},
								{
									"name": "headers",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "writeHead",
							"parameters": [
								{
									"name": "statusCode",
									"type": "number"
								},
								{
									"name": "headers",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "statusCode",
							"type": "number"
						},
						{
							"kind": "method",
							"name": "setHeader",
							"parameters": [
								{
									"name": "name",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "sendDate",
							"type": "boolean"
						},
						{
							"kind": "method",
							"name": "getHeader",
							"parameters": [
								{
									"name": "name",
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "removeHeader",
							"parameters": [
								{
									"name": "name",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "chunk",
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "addTrailers",
							"parameters": [
								{
									"name": "headers",
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "data",
									"optional": true,
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ClientRequest",
					"extends": [
						"events.EventEmitter",
						"stream.Writable"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "fd",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "chunk",
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "abort",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setTimeout",
							"parameters": [
								{
									"name": "timeout",
									"type": "number"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setNoDelay",
							"parameters": [
								{
									"name": "noDelay",
									"optional": true,
									"type": "boolean"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setSocketKeepAlive",
							"parameters": [
								{
									"name": "enable",
									"optional": true,
									"type": "boolean"
								},
								{
									"name": "initialDelay",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "data",
									"optional": true,
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ClientResponse",
					"extends": [
						"events.EventEmitter",
						"stream.Readable"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "statusCode",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "httpVersion",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "headers",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "trailers",
							"type": "any"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Agent",
					"signatures": [
						{
							"kind": "property",
							"name": "maxSockets",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "sockets",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "requests",
							"type": "any"
						}
					]
				},
				{
					"kind": "variable",
					"name": "STATUS_CODES",
					"type": {
						"kind": "object",
						"signatures": [
							{
								"kind": "index",
								"parameter": {
									"name": "x",
									"type": "string"
								},
								"returns": "string"
							},
							{
								"kind": "index",
								"parameter": {
									"name": "x",
									"type": "number"
								},
								"returns": "string"
							}
						]
					}
				},
				{
					"kind": "function",
					"name": "createServer",
					"parameters": [
						{
							"name": "requestListener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "request",
										"type": "ServerRequest"
									},
									{
										"name": "response",
										"type": "ServerResponse"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "Server"
				},
				{
					"kind": "function",
					"name": "createClient",
					"parameters": [
						{
							"name": "port",
							"optional": true,
							"type": "number"
						},
						{
							"name": "host",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "any"
				},
				{
					"kind": "function",
					"name": "request",
					"parameters": [
						{
							"name": "options",
							"type": "any"
						},
						{
							"name": "callback",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "ClientRequest"
				},
				{
					"kind": "function",
					"name": "get",
					"parameters": [
						{
							"name": "options",
							"type": "any"
						},
						{
							"name": "callback",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "ClientRequest"
				},
				{
					"kind": "variable",
					"name": "globalAgent",
					"type": "Agent"
				}
			]
		},
		{
			"kind": "module",
			"name": "cluster",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "child",
					"require": "child_process"
				},
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "ClusterSettings",
					"signatures": [
						{
							"kind": "property",
							"name": "exec",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "args",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"kind": "property",
							"name": "silent",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "class",
					"name": "Worker",
					"extends": "events.EventEmitter",
					"members": [
						{
							"kind": "field",
							"name": "id",
							"type": "string"
						},
						{
							"kind": "field",
							"name": "process",
							"type": "child.ChildProcess"
						},
						{
							"kind": "field",
							"name": "suicide",
							"type": "boolean"
						},
						{
							"kind": "method",
							"name": "send",
							"parameters": [
								{
									"name": "message",
									"type": "any"
								},
								{
									"name": "sendHandle",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "kill",
							"parameters": [
								{
									"name": "signal",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "destroy",
							"parameters": [
								{
									"name": "signal",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "disconnect",
							"returns": "void"
						}
					]
				},
				{
					"kind": "variable",
					"name": "settings",
					"type": "ClusterSettings"
				},
				{
					"kind": "variable",
					"name": "isMaster",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "isWorker",
					"type": "boolean"
				},
				{
					"kind": "function",
					"name": "setupMaster",
					"parameters": [
						{
							"name": "settings",
							"optional": true,
							"type": "ClusterSettings"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fork",
					"parameters": [
						{
							"name": "env",
							"optional": true,
							"type": "any"
						}
					],
					"returns": "Worker"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"parameters": [
						{
							"name": "callback",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "void"
				},
				{
					"kind": "variable",
					"name": "worker",
					"type": "Worker"
				},
				{
					"kind": "variable",
					"name": "workers",
					"type": {
						"kind": "array",
						"type": "Worker"
					}
				},
				{
					"kind": "function",
					"name": "addListener",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "Function"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "on",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "Function"
						}
					],
					"returns": "any"
				},
				{
					"kind": "function",
					"name": "once",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "Function"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "removeListener",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "listener",
							"type": "Function"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"parameters": [
						{
							"name": "event",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "setMaxListeners",
					"parameters": [
						{
							"name": "n",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "listeners",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						}
					],
					"returns": {
						"kind": "array",
						"type": "Function"
					}
				},
				{
					"kind": "function",
					"name": "emit",
					"parameters": [
						{
							"name": "event",
							"type": "string"
						},
						{
							"name": "args",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "module",
			"name": "zlib",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "interface",
					"name": "ZlibOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "chunkSize",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "windowBits",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "level",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "memLevel",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "strategy",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "dictionary",
							"optional": true,
							"type": "any"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Gzip",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "Gunzip",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "Deflate",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "Inflate",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "DeflateRaw",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "InflateRaw",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "interface",
					"name": "Unzip",
					"extends": [
						"stream.Transform"
					]
				},
				{
					"kind": "function",
					"name": "createGzip",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "Gzip"
				},
				{
					"kind": "function",
					"name": "createGunzip",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "Gunzip"
				},
				{
					"kind": "function",
					"name": "createDeflate",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "Deflate"
				},
				{
					"kind": "function",
					"name": "createInflate",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "Inflate"
				},
				{
					"kind": "function",
					"name": "createDeflateRaw",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "DeflateRaw"
				},
				{
					"kind": "function",
					"name": "createInflateRaw",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "InflateRaw"
				},
				{
					"kind": "function",
					"name": "createUnzip",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": "ZlibOptions"
						}
					],
					"returns": "Unzip"
				},
				{
					"kind": "function",
					"name": "deflate",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "deflateRaw",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "gzip",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "gunzip",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "inflate",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "inflateRaw",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "unzip",
					"parameters": [
						{
							"name": "buf",
							"type": "Buffer"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "result",
										"type": "any"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "variable",
					"name": "Z_NO_FLUSH",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_PARTIAL_FLUSH",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_SYNC_FLUSH",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_FULL_FLUSH",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_FINISH",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_BLOCK",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_TREES",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_OK",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_STREAM_END",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_NEED_DICT",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_ERRNO",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_STREAM_ERROR",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_DATA_ERROR",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_MEM_ERROR",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_BUF_ERROR",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_VERSION_ERROR",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_NO_COMPRESSION",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_BEST_SPEED",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_BEST_COMPRESSION",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_DEFAULT_COMPRESSION",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_FILTERED",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_HUFFMAN_ONLY",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_RLE",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_FIXED",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_DEFAULT_STRATEGY",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_BINARY",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_TEXT",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_ASCII",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_UNKNOWN",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_DEFLATED",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "Z_NULL",
					"type": "number"
				}
			]
		},
		{
			"kind": "module",
			"name": "os",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "tmpDir",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "hostname",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "type",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "platform",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "arch",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "release",
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "uptime",
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "loadavg",
					"returns": {
						"kind": "array",
						"type": "number"
					}
				},
				{
					"kind": "function",
					"name": "totalmem",
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "freemem",
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "cpus",
					"returns": {
						"kind": "array",
						"type": {
							"kind": "object",
							"signatures": [
								{
									"kind": "property",
									"name": "model",
									"type": "string"
								},
								{
									"kind": "property",
									"name": "speed",
									"type": "number"
								},
								{
									"kind": "property",
									"name": "times",
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "user",
												"type": "number"
											},
											{
												"kind": "property",
												"name": "nice",
												"type": "number"
											},
											{
												"kind": "property",
												"name": "sys",
												"type": "number"
											},
											{
												"kind": "property",
												"name": "idle",
												"type": "number"
											},
											{
												"kind": "property",
												"name": "irq",
												"type": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"kind": "function",
					"name": "networkInterfaces",
					"returns": "any"
				},
				{
					"kind": "variable",
					"name": "EOL",
					"type": "string"
				}
			]
		},
		{
			"kind": "module",
			"name": "https",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "tls",
					"require": "tls"
				},
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "import",
					"name": "http",
					"require": "http"
				},
				{
					"kind": "interface",
					"name": "ServerOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "pfx",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "key",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "passphrase",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "cert",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ca",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "crl",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ciphers",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "honorCipherOrder",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "requestCert",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "rejectUnauthorized",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "NPNProtocols",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "SNICallback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "servername",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					]
				},
				{
					"kind": "interface",
					"name": "RequestOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hostname",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "path",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "method",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "headers",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "auth",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "agent",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "pfx",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "key",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "passphrase",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "cert",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ca",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ciphers",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "rejectUnauthorized",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Agent",
					"signatures": [
						{
							"kind": "property",
							"name": "maxSockets",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "sockets",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "requests",
							"type": "any"
						}
					]
				},
				{
					"kind": "variable",
					"name": "Agent",
					"type": {
						"kind": "constructor",
						"parameters": [
							{
								"name": "options",
								"optional": true,
								"type": "RequestOptions"
							}
						],
						"returns": "Agent"
					}
				},
				{
					"kind": "interface",
					"name": "Server",
					"extends": [
						"tls.Server"
					]
				},
				{
					"kind": "function",
					"name": "createServer",
					"parameters": [
						{
							"name": "options",
							"type": "ServerOptions"
						},
						{
							"name": "requestListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Server"
				},
				{
					"kind": "function",
					"name": "request",
					"parameters": [
						{
							"name": "options",
							"type": "RequestOptions"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "res",
										"type": "events.EventEmitter"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "http.ClientRequest"
				},
				{
					"kind": "function",
					"name": "get",
					"parameters": [
						{
							"name": "options",
							"type": "RequestOptions"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "res",
										"type": "events.EventEmitter"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "http.ClientRequest"
				},
				{
					"kind": "variable",
					"name": "globalAgent",
					"type": "Agent"
				}
			]
		},
		{
			"kind": "module",
			"name": "punycode",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "decode",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "encode",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "toUnicode",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "toASCII",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "variable",
					"name": "ucs2",
					"type": "ucs2"
				},
				{
					"kind": "interface",
					"name": "ucs2",
					"signatures": [
						{
							"kind": "method",
							"name": "decode",
							"parameters": [
								{
									"name": "string",
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "encode",
							"parameters": [
								{
									"name": "codePoints",
									"type": {
										"kind": "array",
										"type": "number"
									}
								}
							],
							"returns": "string"
						}
					]
				},
				{
					"kind": "variable",
					"name": "version",
					"type": "any"
				}
			]
		},
		{
			"kind": "module",
			"name": "repl",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "ReplOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "prompt",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "input",
							"optional": true,
							"type": "NodeJS.ReadableStream"
						},
						{
							"kind": "property",
							"name": "output",
							"optional": true,
							"type": "NodeJS.WritableStream"
						},
						{
							"kind": "property",
							"name": "terminal",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "eval",
							"optional": true,
							"type": "Function"
						},
						{
							"kind": "property",
							"name": "useColors",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "useGlobal",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "ignoreUndefined",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "writer",
							"optional": true,
							"type": "Function"
						}
					]
				},
				{
					"kind": "function",
					"name": "start",
					"parameters": [
						{
							"name": "options",
							"type": "ReplOptions"
						}
					],
					"returns": "events.EventEmitter"
				}
			]
		},
		{
			"kind": "module",
			"name": "readline",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "ReadLine",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "setPrompt",
							"parameters": [
								{
									"name": "prompt",
									"type": "string"
								},
								{
									"name": "length",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "prompt",
							"parameters": [
								{
									"name": "preserveCursor",
									"optional": true,
									"type": "boolean"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "question",
							"parameters": [
								{
									"name": "query",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "close",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								},
								{
									"name": "key",
									"optional": true,
									"type": "any"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ReadLineOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "input",
							"type": "NodeJS.ReadableStream"
						},
						{
							"kind": "property",
							"name": "output",
							"type": "NodeJS.WritableStream"
						},
						{
							"kind": "property",
							"name": "completer",
							"optional": true,
							"type": "Function"
						},
						{
							"kind": "property",
							"name": "terminal",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "function",
					"name": "createInterface",
					"parameters": [
						{
							"name": "options",
							"type": "ReadLineOptions"
						}
					],
					"returns": "ReadLine"
				}
			]
		},
		{
			"kind": "module",
			"name": "vm",
			"external": true,
			"declares": [
				{
					"kind": "interface",
					"name": "Context"
				},
				{
					"kind": "interface",
					"name": "Script",
					"signatures": [
						{
							"kind": "method",
							"name": "runInThisContext",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "runInNewContext",
							"parameters": [
								{
									"name": "sandbox",
									"optional": true,
									"type": "Context"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "function",
					"name": "runInThisContext",
					"parameters": [
						{
							"name": "code",
							"type": "string"
						},
						{
							"name": "filename",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "runInNewContext",
					"parameters": [
						{
							"name": "code",
							"type": "string"
						},
						{
							"name": "sandbox",
							"optional": true,
							"type": "Context"
						},
						{
							"name": "filename",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "runInContext",
					"parameters": [
						{
							"name": "code",
							"type": "string"
						},
						{
							"name": "context",
							"type": "Context"
						},
						{
							"name": "filename",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "createContext",
					"parameters": [
						{
							"name": "initSandbox",
							"optional": true,
							"type": "Context"
						}
					],
					"returns": "Context"
				},
				{
					"kind": "function",
					"name": "createScript",
					"parameters": [
						{
							"name": "code",
							"type": "string"
						},
						{
							"name": "filename",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "Script"
				}
			]
		},
		{
			"kind": "module",
			"name": "child_process",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "interface",
					"name": "ChildProcess",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "stdin",
							"type": "stream.Writable"
						},
						{
							"kind": "property",
							"name": "stdout",
							"type": "stream.Readable"
						},
						{
							"kind": "property",
							"name": "stderr",
							"type": "stream.Readable"
						},
						{
							"kind": "property",
							"name": "pid",
							"type": "number"
						},
						{
							"kind": "method",
							"name": "kill",
							"parameters": [
								{
									"name": "signal",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "send",
							"parameters": [
								{
									"name": "message",
									"type": "any"
								},
								{
									"name": "sendHandle",
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "disconnect",
							"returns": "void"
						}
					]
				},
				{
					"kind": "function",
					"name": "spawn",
					"parameters": [
						{
							"name": "command",
							"type": "string"
						},
						{
							"name": "args",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "cwd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "stdio",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "custom",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "env",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "detached",
										"optional": true,
										"type": "boolean"
									}
								]
							}
						}
					],
					"returns": "ChildProcess"
				},
				{
					"kind": "function",
					"name": "exec",
					"parameters": [
						{
							"name": "command",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "cwd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "stdio",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "customFds",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "env",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "timeout",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "maxBuffer",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "killSignal",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "stdout",
										"type": "Buffer"
									},
									{
										"name": "stderr",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "ChildProcess"
				},
				{
					"kind": "function",
					"name": "exec",
					"parameters": [
						{
							"name": "command",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "stdout",
										"type": "Buffer"
									},
									{
										"name": "stderr",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "ChildProcess"
				},
				{
					"kind": "function",
					"name": "execFile",
					"parameters": [
						{
							"name": "file",
							"type": "string"
						},
						{
							"name": "args",
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "cwd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "stdio",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "customFds",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "env",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "timeout",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "maxBuffer",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "killSignal",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "error",
										"type": "Error"
									},
									{
										"name": "stdout",
										"type": "Buffer"
									},
									{
										"name": "stderr",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "ChildProcess"
				},
				{
					"kind": "function",
					"name": "fork",
					"parameters": [
						{
							"name": "modulePath",
							"type": "string"
						},
						{
							"name": "args",
							"optional": true,
							"type": {
								"kind": "array",
								"type": "string"
							}
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "cwd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "env",
										"optional": true,
										"type": "any"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "ChildProcess"
				}
			]
		},
		{
			"kind": "module",
			"name": "url",
			"external": true,
			"declares": [
				{
					"kind": "interface",
					"name": "Url",
					"signatures": [
						{
							"kind": "property",
							"name": "href",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "protocol",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "auth",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hostname",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "host",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "pathname",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "search",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "query",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "slashes",
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "hash",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "path",
							"optional": true,
							"type": "string"
						}
					]
				},
				{
					"kind": "interface",
					"name": "UrlOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "protocol",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "auth",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "hostname",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "pathname",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "search",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "query",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "hash",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "path",
							"optional": true,
							"type": "string"
						}
					]
				},
				{
					"kind": "function",
					"name": "parse",
					"parameters": [
						{
							"name": "urlStr",
							"type": "string"
						},
						{
							"name": "parseQueryString",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "slashesDenoteHost",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "Url"
				},
				{
					"kind": "function",
					"name": "format",
					"parameters": [
						{
							"name": "url",
							"type": "UrlOptions"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "resolve",
					"parameters": [
						{
							"name": "from",
							"type": "string"
						},
						{
							"name": "to",
							"type": "string"
						}
					],
					"returns": "string"
				}
			]
		},
		{
			"kind": "module",
			"name": "dns",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "lookup",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "family",
							"type": "number"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "address",
										"type": "string"
									},
									{
										"name": "family",
										"type": "number"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "lookup",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "address",
										"type": "string"
									},
									{
										"name": "family",
										"type": "number"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "resolve",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "rrtype",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolve",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolve4",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolve6",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolveMx",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolveTxt",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolveSrv",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolveNs",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "resolveCname",
					"parameters": [
						{
							"name": "domain",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "addresses",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "reverse",
					"parameters": [
						{
							"name": "ip",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "domains",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				}
			]
		},
		{
			"kind": "module",
			"name": "net",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "interface",
					"name": "Socket",
					"extends": [
						"stream.Duplex"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "fd",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "connect",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "host",
									"optional": true,
									"type": "string"
								},
								{
									"name": "connectionListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "connect",
							"parameters": [
								{
									"name": "path",
									"type": "string"
								},
								{
									"name": "connectionListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "bufferSize",
							"type": "number"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "destroy",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setTimeout",
							"parameters": [
								{
									"name": "timeout",
									"type": "number"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setNoDelay",
							"parameters": [
								{
									"name": "noDelay",
									"optional": true,
									"type": "boolean"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setKeepAlive",
							"parameters": [
								{
									"name": "enable",
									"optional": true,
									"type": "boolean"
								},
								{
									"name": "initialDelay",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "address",
							"returns": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "port",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "family",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "address",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "method",
							"name": "unref",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "ref",
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "remoteAddress",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "remotePort",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "bytesRead",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "bytesWritten",
							"type": "number"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "data",
									"optional": true,
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "variable",
					"name": "Socket",
					"type": {
						"kind": "constructor",
						"parameters": [
							{
								"name": "options",
								"optional": true,
								"type": {
									"kind": "object",
									"signatures": [
										{
											"kind": "property",
											"name": "fd",
											"optional": true,
											"type": "string"
										},
										{
											"kind": "property",
											"name": "type",
											"optional": true,
											"type": "string"
										},
										{
											"kind": "property",
											"name": "allowHalfOpen",
											"optional": true,
											"type": "boolean"
										}
									]
								}
							}
						],
						"returns": "Socket"
					}
				},
				{
					"kind": "interface",
					"name": "Server",
					"extends": [
						"Socket"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "host",
									"optional": true,
									"type": "string"
								},
								{
									"name": "backlog",
									"optional": true,
									"type": "number"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "path",
									"type": "string"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "handle",
									"type": "any"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "close",
							"parameters": [
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "address",
							"returns": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "port",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "family",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "address",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "property",
							"name": "maxConnections",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "connections",
							"type": "number"
						}
					]
				},
				{
					"kind": "function",
					"name": "createServer",
					"parameters": [
						{
							"name": "connectionListener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "socket",
										"type": "Socket"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "Server"
				},
				{
					"kind": "function",
					"name": "createServer",
					"parameters": [
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "allowHalfOpen",
										"optional": true,
										"type": "boolean"
									}
								]
							}
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "socket",
										"type": "Socket"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "Server"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "allowHalfOpen",
										"optional": true,
										"type": "boolean"
									}
								]
							}
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "port",
							"type": "number"
						},
						{
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "createConnection",
					"parameters": [
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "allowHalfOpen",
										"optional": true,
										"type": "boolean"
									}
								]
							}
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "createConnection",
					"parameters": [
						{
							"name": "port",
							"type": "number"
						},
						{
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "createConnection",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "connectionListener",
							"optional": true,
							"type": "Function"
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "function",
					"name": "isIP",
					"parameters": [
						{
							"name": "input",
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "isIPv4",
					"parameters": [
						{
							"name": "input",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "isIPv6",
					"parameters": [
						{
							"name": "input",
							"type": "string"
						}
					],
					"returns": "boolean"
				}
			]
		},
		{
			"kind": "module",
			"name": "dgram",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "RemoteInfo",
					"signatures": [
						{
							"kind": "property",
							"name": "address",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "size",
							"type": "number"
						}
					]
				},
				{
					"kind": "interface",
					"name": "AddressInfo",
					"signatures": [
						{
							"kind": "property",
							"name": "address",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "family",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"type": "number"
						}
					]
				},
				{
					"kind": "function",
					"name": "createSocket",
					"parameters": [
						{
							"name": "type",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "msg",
										"type": "Buffer"
									},
									{
										"name": "rinfo",
										"type": "RemoteInfo"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "Socket"
				},
				{
					"kind": "interface",
					"name": "Socket",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "send",
							"parameters": [
								{
									"name": "buf",
									"type": "Buffer"
								},
								{
									"name": "offset",
									"type": "number"
								},
								{
									"name": "length",
									"type": "number"
								},
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "callback",
									"optional": true,
									"type": {
										"kind": "function",
										"parameters": [
											{
												"name": "error",
												"type": "Error"
											},
											{
												"name": "bytes",
												"type": "number"
											}
										],
										"returns": "void"
									}
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "bind",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "address",
									"optional": true,
									"type": "string"
								},
								{
									"name": "callback",
									"optional": true,
									"type": {
										"kind": "function",
										"returns": "void"
									}
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "close",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "address",
							"returns": "AddressInfo"
						},
						{
							"kind": "method",
							"name": "setBroadcast",
							"parameters": [
								{
									"name": "flag",
									"type": "boolean"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setMulticastTTL",
							"parameters": [
								{
									"name": "ttl",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setMulticastLoopback",
							"parameters": [
								{
									"name": "flag",
									"type": "boolean"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "addMembership",
							"parameters": [
								{
									"name": "multicastAddress",
									"type": "string"
								},
								{
									"name": "multicastInterface",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "dropMembership",
							"parameters": [
								{
									"name": "multicastAddress",
									"type": "string"
								},
								{
									"name": "multicastInterface",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						}
					]
				}
			]
		},
		{
			"kind": "module",
			"name": "fs",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "Stats",
					"signatures": [
						{
							"kind": "method",
							"name": "isFile",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isDirectory",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isBlockDevice",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isCharacterDevice",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isSymbolicLink",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isFIFO",
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "isSocket",
							"returns": "boolean"
						},
						{
							"kind": "property",
							"name": "dev",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "ino",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "mode",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "nlink",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "uid",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "gid",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "rdev",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "size",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "blksize",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "blocks",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "atime",
							"type": "Date"
						},
						{
							"kind": "property",
							"name": "mtime",
							"type": "Date"
						},
						{
							"kind": "property",
							"name": "ctime",
							"type": "Date"
						}
					]
				},
				{
					"kind": "interface",
					"name": "FSWatcher",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "close",
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ReadStream",
					"extends": [
						"stream.Readable"
					]
				},
				{
					"kind": "interface",
					"name": "WriteStream",
					"extends": [
						"stream.Writable"
					]
				},
				{
					"kind": "function",
					"name": "rename",
					"parameters": [
						{
							"name": "oldPath",
							"type": "string"
						},
						{
							"name": "newPath",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "renameSync",
					"parameters": [
						{
							"name": "oldPath",
							"type": "string"
						},
						{
							"name": "newPath",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "truncate",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "truncate",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "len",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "truncateSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "len",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "ftruncate",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "ftruncate",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "len",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "ftruncateSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "len",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chown",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chownSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchown",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchownSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchown",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchownSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "uid",
							"type": "number"
						},
						{
							"name": "gid",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chmod",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chmod",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chmodSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "chmodSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchmod",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchmod",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "mode",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchmodSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fchmodSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "mode",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchmod",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchmod",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchmodSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lchmodSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "stat",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "stats",
										"type": "Stats"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "lstat",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "stats",
										"type": "Stats"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fstat",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "stats",
										"type": "Stats"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "statSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "Stats"
				},
				{
					"kind": "function",
					"name": "lstatSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "Stats"
				},
				{
					"kind": "function",
					"name": "fstatSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						}
					],
					"returns": "Stats"
				},
				{
					"kind": "function",
					"name": "link",
					"parameters": [
						{
							"name": "srcpath",
							"type": "string"
						},
						{
							"name": "dstpath",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "linkSync",
					"parameters": [
						{
							"name": "srcpath",
							"type": "string"
						},
						{
							"name": "dstpath",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "symlink",
					"parameters": [
						{
							"name": "srcpath",
							"type": "string"
						},
						{
							"name": "dstpath",
							"type": "string"
						},
						{
							"name": "type",
							"optional": true,
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "symlinkSync",
					"parameters": [
						{
							"name": "srcpath",
							"type": "string"
						},
						{
							"name": "dstpath",
							"type": "string"
						},
						{
							"name": "type",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readlink",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "linkString",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readlinkSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "realpath",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "resolvedPath",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "realpath",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "cache",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "index",
										"parameter": {
											"name": "x",
											"type": "string"
										},
										"returns": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "resolvedPath",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "realpathSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "cache",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "index",
										"parameter": {
											"name": "x",
											"type": "string"
										},
										"returns": "string"
									}
								]
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "unlink",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "unlinkSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "rmdir",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "rmdirSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "mkdir",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "mkdir",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "mkdir",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "mkdirSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "mkdirSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "mode",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readdir",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "files",
										"type": {
											"kind": "array",
											"type": "string"
										}
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readdirSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": {
						"kind": "array",
						"type": "string"
					}
				},
				{
					"kind": "function",
					"name": "close",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "closeSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "open",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "flags",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "fd",
										"type": "number"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "open",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "flags",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "fd",
										"type": "number"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "open",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "flags",
							"type": "string"
						},
						{
							"name": "mode",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "fd",
										"type": "number"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "openSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "flags",
							"type": "string"
						},
						{
							"name": "mode",
							"optional": true,
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "openSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "flags",
							"type": "string"
						},
						{
							"name": "mode",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "utimes",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "atime",
							"type": "number"
						},
						{
							"name": "mtime",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "utimes",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "atime",
							"type": "Date"
						},
						{
							"name": "mtime",
							"type": "Date"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "utimesSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "atime",
							"type": "number"
						},
						{
							"name": "mtime",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "utimesSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "atime",
							"type": "Date"
						},
						{
							"name": "mtime",
							"type": "Date"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "futimes",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "atime",
							"type": "number"
						},
						{
							"name": "mtime",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "futimes",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "atime",
							"type": "Date"
						},
						{
							"name": "mtime",
							"type": "Date"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "futimesSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "atime",
							"type": "number"
						},
						{
							"name": "mtime",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "futimesSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "atime",
							"type": "Date"
						},
						{
							"name": "mtime",
							"type": "Date"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fsync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"optional": true,
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "fsyncSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "write",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "buffer",
							"type": "Buffer"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "length",
							"type": "number"
						},
						{
							"name": "position",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "written",
										"type": "number"
									},
									{
										"name": "buffer",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "writeSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "buffer",
							"type": "Buffer"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "length",
							"type": "number"
						},
						{
							"name": "position",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "read",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "buffer",
							"type": "Buffer"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "length",
							"type": "number"
						},
						{
							"name": "position",
							"type": "number"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "bytesRead",
										"type": "number"
									},
									{
										"name": "buffer",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readSync",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						},
						{
							"name": "buffer",
							"type": "Buffer"
						},
						{
							"name": "offset",
							"type": "number"
						},
						{
							"name": "length",
							"type": "number"
						},
						{
							"name": "position",
							"type": "number"
						}
					],
					"returns": "number"
				},
				{
					"kind": "function",
					"name": "readFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "encoding",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "data",
										"type": "string"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "data",
										"type": "string"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "data",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									},
									{
										"name": "data",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "readFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "encoding",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "readFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "readFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "Buffer"
				},
				{
					"kind": "function",
					"name": "writeFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "writeFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "writeFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "writeFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "writeFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "appendFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "appendFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "appendFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "NodeJS.ErrnoException"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "appendFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "appendFileSync",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "data",
							"type": "any"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "flag",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "watchFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "curr",
										"type": "Stats"
									},
									{
										"name": "prev",
										"type": "Stats"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "watchFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "persistent",
										"optional": true,
										"type": "boolean"
									},
									{
										"kind": "property",
										"name": "interval",
										"optional": true,
										"type": "number"
									}
								]
							}
						},
						{
							"name": "listener",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "curr",
										"type": "Stats"
									},
									{
										"name": "prev",
										"type": "Stats"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "unwatchFile",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "listener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "curr",
										"type": "Stats"
									},
									{
										"name": "prev",
										"type": "Stats"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "watch",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "listener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "event",
										"type": "string"
									},
									{
										"name": "filename",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "FSWatcher"
				},
				{
					"kind": "function",
					"name": "watch",
					"parameters": [
						{
							"name": "filename",
							"type": "string"
						},
						{
							"name": "options",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "persistent",
										"optional": true,
										"type": "boolean"
									}
								]
							}
						},
						{
							"name": "listener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "event",
										"type": "string"
									},
									{
										"name": "filename",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "FSWatcher"
				},
				{
					"kind": "function",
					"name": "exists",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "callback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "exists",
										"type": "boolean"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "existsSync",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "createReadStream",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "flags",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "fd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "number"
									},
									{
										"kind": "property",
										"name": "bufferSize",
										"optional": true,
										"type": "number"
									}
								]
							}
						}
					],
					"returns": "ReadStream"
				},
				{
					"kind": "function",
					"name": "createReadStream",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "flags",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "fd",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "mode",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "bufferSize",
										"optional": true,
										"type": "number"
									}
								]
							}
						}
					],
					"returns": "ReadStream"
				},
				{
					"kind": "function",
					"name": "createWriteStream",
					"parameters": [
						{
							"name": "path",
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "flags",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "encoding",
										"optional": true,
										"type": "string"
									},
									{
										"kind": "property",
										"name": "string",
										"optional": true,
										"type": "string"
									}
								]
							}
						}
					],
					"returns": "WriteStream"
				}
			]
		},
		{
			"kind": "module",
			"name": "path",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "normalize",
					"parameters": [
						{
							"name": "p",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "join",
					"parameters": [
						{
							"name": "paths",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "resolve",
					"parameters": [
						{
							"name": "pathSegments",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "relative",
					"parameters": [
						{
							"name": "from",
							"type": "string"
						},
						{
							"name": "to",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "dirname",
					"parameters": [
						{
							"name": "p",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "basename",
					"parameters": [
						{
							"name": "p",
							"type": "string"
						},
						{
							"name": "ext",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "extname",
					"parameters": [
						{
							"name": "p",
							"type": "string"
						}
					],
					"returns": "string"
				},
				{
					"kind": "variable",
					"name": "sep",
					"type": "string"
				}
			]
		},
		{
			"kind": "module",
			"name": "string_decoder",
			"external": true,
			"declares": [
				{
					"kind": "interface",
					"name": "NodeStringDecoder",
					"signatures": [
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "detectIncompleteChar",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								}
							],
							"returns": "number"
						}
					]
				},
				{
					"kind": "variable",
					"name": "StringDecoder",
					"type": {
						"kind": "constructor",
						"parameters": [
							{
								"name": "encoding",
								"type": "string"
							}
						],
						"returns": "NodeStringDecoder"
					}
				}
			]
		},
		{
			"kind": "module",
			"name": "tls",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "crypto",
					"require": "crypto"
				},
				{
					"kind": "import",
					"name": "net",
					"require": "net"
				},
				{
					"kind": "import",
					"name": "stream",
					"require": "stream"
				},
				{
					"kind": "variable",
					"name": "CLIENT_RENEG_LIMIT",
					"type": "number"
				},
				{
					"kind": "variable",
					"name": "CLIENT_RENEG_WINDOW",
					"type": "number"
				},
				{
					"kind": "interface",
					"name": "TlsOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "pfx",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "key",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "passphrase",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "cert",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ca",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "crl",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ciphers",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "honorCipherOrder",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "requestCert",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "rejectUnauthorized",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "NPNProtocols",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "SNICallback",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "servername",
										"type": "string"
									}
								],
								"returns": "any"
							}
						}
					]
				},
				{
					"kind": "interface",
					"name": "ConnectionOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "port",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "socket",
							"optional": true,
							"type": "net.Socket"
						},
						{
							"kind": "property",
							"name": "pfx",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "key",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "passphrase",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "cert",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ca",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "rejectUnauthorized",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "NPNProtocols",
							"optional": true,
							"type": "any"
						},
						{
							"kind": "property",
							"name": "servername",
							"optional": true,
							"type": "string"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Server",
					"extends": [
						"net.Server"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "host",
									"optional": true,
									"type": "string"
								},
								{
									"name": "backlog",
									"optional": true,
									"type": "number"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "path",
									"type": "string"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "handle",
									"type": "any"
								},
								{
									"name": "listeningListener",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "listen",
							"parameters": [
								{
									"name": "port",
									"type": "number"
								},
								{
									"name": "host",
									"optional": true,
									"type": "string"
								},
								{
									"name": "callback",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "close",
							"returns": "Server"
						},
						{
							"kind": "method",
							"name": "address",
							"returns": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "port",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "family",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "address",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "method",
							"name": "addContext",
							"parameters": [
								{
									"name": "hostName",
									"type": "string"
								},
								{
									"name": "credentials",
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "key",
												"type": "string"
											},
											{
												"kind": "property",
												"name": "cert",
												"type": "string"
											},
											{
												"kind": "property",
												"name": "ca",
												"type": "string"
											}
										]
									}
								}
							],
							"returns": "void"
						},
						{
							"kind": "property",
							"name": "maxConnections",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "connections",
							"type": "number"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ClearTextStream",
					"extends": [
						"stream.Duplex"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "authorized",
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "authorizationError",
							"type": "Error"
						},
						{
							"kind": "method",
							"name": "getPeerCertificate",
							"returns": "any"
						},
						{
							"kind": "property",
							"name": "getCipher",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "name",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "version",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "property",
							"name": "address",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "property",
										"name": "port",
										"type": "number"
									},
									{
										"kind": "property",
										"name": "family",
										"type": "string"
									},
									{
										"kind": "property",
										"name": "address",
										"type": "string"
									}
								]
							}
						},
						{
							"kind": "property",
							"name": "remoteAddress",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "remotePort",
							"type": "number"
						}
					]
				},
				{
					"kind": "interface",
					"name": "SecurePair",
					"signatures": [
						{
							"kind": "property",
							"name": "encrypted",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "cleartext",
							"type": "any"
						}
					]
				},
				{
					"kind": "function",
					"name": "createServer",
					"parameters": [
						{
							"name": "options",
							"type": "TlsOptions"
						},
						{
							"name": "secureConnectionListener",
							"optional": true,
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "cleartextStream",
										"type": "ClearTextStream"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "Server"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "options",
							"type": "TlsOptions"
						},
						{
							"name": "secureConnectionListener",
							"optional": true,
							"type": {
								"kind": "function",
								"returns": "void"
							}
						}
					],
					"returns": "ClearTextStream"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "port",
							"type": "number"
						},
						{
							"name": "host",
							"optional": true,
							"type": "string"
						},
						{
							"name": "options",
							"optional": true,
							"type": "ConnectionOptions"
						},
						{
							"name": "secureConnectListener",
							"optional": true,
							"type": {
								"kind": "function",
								"returns": "void"
							}
						}
					],
					"returns": "ClearTextStream"
				},
				{
					"kind": "function",
					"name": "connect",
					"parameters": [
						{
							"name": "port",
							"type": "number"
						},
						{
							"name": "options",
							"optional": true,
							"type": "ConnectionOptions"
						},
						{
							"name": "secureConnectListener",
							"optional": true,
							"type": {
								"kind": "function",
								"returns": "void"
							}
						}
					],
					"returns": "ClearTextStream"
				},
				{
					"kind": "function",
					"name": "createSecurePair",
					"parameters": [
						{
							"name": "credentials",
							"optional": true,
							"type": "crypto.Credentials"
						},
						{
							"name": "isServer",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "requestCert",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "rejectUnauthorized",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "SecurePair"
				}
			]
		},
		{
			"kind": "module",
			"name": "crypto",
			"external": true,
			"declares": [
				{
					"kind": "interface",
					"name": "CredentialDetails",
					"signatures": [
						{
							"kind": "property",
							"name": "pfx",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "key",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "passphrase",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "cert",
							"type": "string"
						},
						{
							"kind": "property",
							"name": "ca",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "crl",
							"type": "any"
						},
						{
							"kind": "property",
							"name": "ciphers",
							"type": "string"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Credentials",
					"signatures": [
						{
							"kind": "property",
							"name": "context",
							"optional": true,
							"type": "any"
						}
					]
				},
				{
					"kind": "function",
					"name": "createCredentials",
					"parameters": [
						{
							"name": "details",
							"type": "CredentialDetails"
						}
					],
					"returns": "Credentials"
				},
				{
					"kind": "function",
					"name": "createHash",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						}
					],
					"returns": "Hash"
				},
				{
					"kind": "function",
					"name": "createHmac",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "key",
							"type": "string"
						}
					],
					"returns": "Hmac"
				},
				{
					"kind": "function",
					"name": "createHmac",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "key",
							"type": "Buffer"
						}
					],
					"returns": "Hmac"
				},
				{
					"kind": "interface",
					"name": "Hash",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								},
								{
									"name": "input_encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "Hash"
						},
						{
							"kind": "method",
							"name": "digest",
							"parameters": [
								{
									"name": "encoding",
									"type": "'buffer'"
								}
							],
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "digest",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "digest",
							"returns": "Buffer"
						}
					]
				},
				{
					"kind": "interface",
					"name": "Hmac",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								},
								{
									"name": "input_encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "Hmac"
						},
						{
							"kind": "method",
							"name": "digest",
							"parameters": [
								{
									"name": "encoding",
									"type": "'buffer'"
								}
							],
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "digest",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "digest",
							"returns": "Buffer"
						}
					]
				},
				{
					"kind": "function",
					"name": "createCipher",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "password",
							"type": "any"
						}
					],
					"returns": "Cipher"
				},
				{
					"kind": "function",
					"name": "createCipheriv",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "key",
							"type": "any"
						},
						{
							"name": "iv",
							"type": "any"
						}
					],
					"returns": "Cipher"
				},
				{
					"kind": "interface",
					"name": "Cipher",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "Buffer"
								}
							],
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "string"
								},
								{
									"name": "input_encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "output_encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "final",
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "final",
							"parameters": [
								{
									"name": "output_encoding",
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "setAutoPadding",
							"parameters": [
								{
									"name": "auto_padding",
									"type": "boolean"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "function",
					"name": "createDecipher",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "password",
							"type": "any"
						}
					],
					"returns": "Decipher"
				},
				{
					"kind": "function",
					"name": "createDecipheriv",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						},
						{
							"name": "key",
							"type": "any"
						},
						{
							"name": "iv",
							"type": "any"
						}
					],
					"returns": "Decipher"
				},
				{
					"kind": "interface",
					"name": "Decipher",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "Buffer"
								}
							],
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "string"
								},
								{
									"name": "input_encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "output_encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "final",
							"returns": "Buffer"
						},
						{
							"kind": "method",
							"name": "final",
							"parameters": [
								{
									"name": "output_encoding",
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "setAutoPadding",
							"parameters": [
								{
									"name": "auto_padding",
									"type": "boolean"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "function",
					"name": "createSign",
					"parameters": [
						{
							"name": "algorithm",
							"type": "string"
						}
					],
					"returns": "Signer"
				},
				{
					"kind": "interface",
					"name": "Signer",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "sign",
							"parameters": [
								{
									"name": "private_key",
									"type": "string"
								},
								{
									"name": "output_format",
									"type": "string"
								}
							],
							"returns": "string"
						}
					]
				},
				{
					"kind": "function",
					"name": "createVerify",
					"parameters": [
						{
							"name": "algorith",
							"type": "string"
						}
					],
					"returns": "Verify"
				},
				{
					"kind": "interface",
					"name": "Verify",
					"signatures": [
						{
							"kind": "method",
							"name": "update",
							"parameters": [
								{
									"name": "data",
									"type": "any"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "verify",
							"parameters": [
								{
									"name": "object",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "signature_format",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						}
					]
				},
				{
					"kind": "function",
					"name": "createDiffieHellman",
					"parameters": [
						{
							"name": "prime_length",
							"type": "number"
						}
					],
					"returns": "DiffieHellman"
				},
				{
					"kind": "function",
					"name": "createDiffieHellman",
					"parameters": [
						{
							"name": "prime",
							"type": "number"
						},
						{
							"name": "encoding",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "DiffieHellman"
				},
				{
					"kind": "interface",
					"name": "DiffieHellman",
					"signatures": [
						{
							"kind": "method",
							"name": "generateKeys",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "computeSecret",
							"parameters": [
								{
									"name": "other_public_key",
									"type": "string"
								},
								{
									"name": "input_encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "output_encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "getPrime",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "getGenerator",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "getPublicKey",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "getPrivateKey",
							"parameters": [
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "string"
						},
						{
							"kind": "method",
							"name": "setPublicKey",
							"parameters": [
								{
									"name": "public_key",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "setPrivateKey",
							"parameters": [
								{
									"name": "public_key",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "function",
					"name": "getDiffieHellman",
					"parameters": [
						{
							"name": "group_name",
							"type": "string"
						}
					],
					"returns": "DiffieHellman"
				},
				{
					"kind": "function",
					"name": "pbkdf2",
					"parameters": [
						{
							"name": "password",
							"type": "string"
						},
						{
							"name": "salt",
							"type": "string"
						},
						{
							"name": "iterations",
							"type": "number"
						},
						{
							"name": "keylen",
							"type": "number"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "derivedKey",
										"type": "Buffer"
									}
								],
								"returns": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "pbkdf2Sync",
					"parameters": [
						{
							"name": "password",
							"type": "string"
						},
						{
							"name": "salt",
							"type": "string"
						},
						{
							"name": "iterations",
							"type": "number"
						},
						{
							"name": "keylen",
							"type": "number"
						}
					],
					"returns": "Buffer"
				},
				{
					"kind": "function",
					"name": "randomBytes",
					"parameters": [
						{
							"name": "size",
							"type": "number"
						}
					],
					"returns": "Buffer"
				},
				{
					"kind": "function",
					"name": "randomBytes",
					"parameters": [
						{
							"name": "size",
							"type": "number"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "buf",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "pseudoRandomBytes",
					"parameters": [
						{
							"name": "size",
							"type": "number"
						}
					],
					"returns": "Buffer"
				},
				{
					"kind": "function",
					"name": "pseudoRandomBytes",
					"parameters": [
						{
							"name": "size",
							"type": "number"
						},
						{
							"name": "callback",
							"type": {
								"kind": "function",
								"parameters": [
									{
										"name": "err",
										"type": "Error"
									},
									{
										"name": "buf",
										"type": "Buffer"
									}
								],
								"returns": "void"
							}
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "module",
			"name": "stream",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "interface",
					"name": "Stream",
					"extends": [
						"events.EventEmitter"
					],
					"signatures": [
						{
							"kind": "method",
							"name": "pipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "NodeJS.WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"type": "T"
								},
								{
									"name": "options",
									"optional": true,
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "end",
												"optional": true,
												"type": "boolean"
											}
										]
									}
								}
							],
							"returns": "T"
						}
					]
				},
				{
					"kind": "interface",
					"name": "ReadableOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "highWaterMark",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "encoding",
							"optional": true,
							"type": "string"
						},
						{
							"kind": "property",
							"name": "objectMode",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "class",
					"name": "Readable",
					"extends": "events.EventEmitter",
					"implements": [
						"NodeJS.ReadableStream"
					],
					"members": [
						{
							"kind": "field",
							"name": "readable",
							"type": "boolean"
						},
						{
							"kind": "constructor",
							"parameters": [
								{
									"name": "opts",
									"optional": true,
									"type": "ReadableOptions"
								}
							]
						},
						{
							"kind": "method",
							"name": "_read",
							"parameters": [
								{
									"name": "size",
									"type": "number"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "read",
							"parameters": [
								{
									"name": "size",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "NodeJS.WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"type": "T"
								},
								{
									"name": "options",
									"optional": true,
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "end",
												"optional": true,
												"type": "boolean"
											}
										]
									}
								}
							],
							"returns": "T"
						},
						{
							"kind": "method",
							"name": "unpipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "NodeJS.WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"optional": true,
									"type": "T"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "Buffer"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "wrap",
							"parameters": [
								{
									"name": "oldStream",
									"type": "NodeJS.ReadableStream"
								}
							],
							"returns": "NodeJS.ReadableStream"
						},
						{
							"kind": "method",
							"name": "push",
							"parameters": [
								{
									"name": "chunk",
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						}
					]
				},
				{
					"kind": "interface",
					"name": "WritableOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "highWaterMark",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "decodeStrings",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "class",
					"name": "Writable",
					"extends": "events.EventEmitter",
					"implements": [
						"NodeJS.WritableStream"
					],
					"members": [
						{
							"kind": "field",
							"name": "writable",
							"type": "boolean"
						},
						{
							"kind": "constructor",
							"parameters": [
								{
									"name": "opts",
									"optional": true,
									"type": "WritableOptions"
								}
							]
						},
						{
							"kind": "method",
							"name": "_write",
							"parameters": [
								{
									"name": "data",
									"type": "Buffer"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "_write",
							"parameters": [
								{
									"name": "data",
									"type": "string"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "DuplexOptions",
					"extends": [
						"ReadableOptions",
						"WritableOptions"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "allowHalfOpen",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "class",
					"name": "Duplex",
					"extends": "Readable",
					"implements": [
						"NodeJS.ReadWriteStream"
					],
					"members": [
						{
							"kind": "field",
							"name": "writable",
							"type": "boolean"
						},
						{
							"kind": "constructor",
							"parameters": [
								{
									"name": "opts",
									"optional": true,
									"type": "DuplexOptions"
								}
							]
						},
						{
							"kind": "method",
							"name": "_write",
							"parameters": [
								{
									"name": "data",
									"type": "Buffer"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "_write",
							"parameters": [
								{
									"name": "data",
									"type": "string"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "TransformOptions",
					"extends": [
						"ReadableOptions",
						"WritableOptions"
					]
				},
				{
					"kind": "class",
					"name": "Transform",
					"extends": "events.EventEmitter",
					"implements": [
						"NodeJS.ReadWriteStream"
					],
					"members": [
						{
							"kind": "field",
							"name": "readable",
							"type": "boolean"
						},
						{
							"kind": "field",
							"name": "writable",
							"type": "boolean"
						},
						{
							"kind": "constructor",
							"parameters": [
								{
									"name": "opts",
									"optional": true,
									"type": "TransformOptions"
								}
							]
						},
						{
							"kind": "method",
							"name": "_transform",
							"parameters": [
								{
									"name": "chunk",
									"type": "Buffer"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "_transform",
							"parameters": [
								{
									"name": "chunk",
									"type": "string"
								},
								{
									"name": "encoding",
									"type": "string"
								},
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "_flush",
							"parameters": [
								{
									"name": "callback",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "read",
							"parameters": [
								{
									"name": "size",
									"optional": true,
									"type": "number"
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "setEncoding",
							"parameters": [
								{
									"name": "encoding",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pause",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "resume",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "pipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "NodeJS.WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"type": "T"
								},
								{
									"name": "options",
									"optional": true,
									"type": {
										"kind": "object",
										"signatures": [
											{
												"kind": "property",
												"name": "end",
												"optional": true,
												"type": "boolean"
											}
										]
									}
								}
							],
							"returns": "T"
						},
						{
							"kind": "method",
							"name": "unpipe",
							"typeParameters": [
								{
									"name": "T",
									"constraint": "NodeJS.WritableStream"
								}
							],
							"parameters": [
								{
									"name": "destination",
									"optional": true,
									"type": "T"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "unshift",
							"parameters": [
								{
									"name": "chunk",
									"type": "Buffer"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "wrap",
							"parameters": [
								{
									"name": "oldStream",
									"type": "NodeJS.ReadableStream"
								}
							],
							"returns": "NodeJS.ReadableStream"
						},
						{
							"kind": "method",
							"name": "push",
							"parameters": [
								{
									"name": "chunk",
									"type": "any"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "write",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "boolean"
						},
						{
							"kind": "method",
							"name": "end",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "buffer",
									"type": "Buffer"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "end",
							"parameters": [
								{
									"name": "str",
									"type": "string"
								},
								{
									"name": "encoding",
									"optional": true,
									"type": "string"
								},
								{
									"name": "cb",
									"optional": true,
									"type": "Function"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "class",
					"name": "PassThrough",
					"extends": "Transform"
				}
			]
		},
		{
			"kind": "module",
			"name": "util",
			"external": true,
			"declares": [
				{
					"kind": "interface",
					"name": "InspectOptions",
					"signatures": [
						{
							"kind": "property",
							"name": "showHidden",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "depth",
							"optional": true,
							"type": "number"
						},
						{
							"kind": "property",
							"name": "colors",
							"optional": true,
							"type": "boolean"
						},
						{
							"kind": "property",
							"name": "customInspect",
							"optional": true,
							"type": "boolean"
						}
					]
				},
				{
					"kind": "function",
					"name": "format",
					"parameters": [
						{
							"name": "format",
							"type": "any"
						},
						{
							"name": "param",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "debug",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "error",
					"parameters": [
						{
							"name": "param",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "puts",
					"parameters": [
						{
							"name": "param",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "print",
					"parameters": [
						{
							"name": "param",
							"rest": true,
							"type": {
								"kind": "array",
								"type": "any"
							}
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "log",
					"parameters": [
						{
							"name": "string",
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "function",
					"name": "inspect",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						},
						{
							"name": "showHidden",
							"optional": true,
							"type": "boolean"
						},
						{
							"name": "depth",
							"optional": true,
							"type": "number"
						},
						{
							"name": "color",
							"optional": true,
							"type": "boolean"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "inspect",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						},
						{
							"name": "options",
							"type": "InspectOptions"
						}
					],
					"returns": "string"
				},
				{
					"kind": "function",
					"name": "isArray",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "isRegExp",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "isDate",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "isError",
					"parameters": [
						{
							"name": "object",
							"type": "any"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "function",
					"name": "inherits",
					"parameters": [
						{
							"name": "constructor",
							"type": "any"
						},
						{
							"name": "superConstructor",
							"type": "any"
						}
					],
					"returns": "void"
				}
			]
		},
		{
			"kind": "module",
			"name": "assert",
			"external": true,
			"declares": [
				{
					"kind": "function",
					"name": "internal",
					"parameters": [
						{
							"name": "value",
							"type": "any"
						},
						{
							"name": "message",
							"optional": true,
							"type": "string"
						}
					],
					"returns": "void"
				},
				{
					"kind": "module",
					"name": "internal",
					"declares": [
						{
							"kind": "class",
							"name": "AssertionError",
							"implements": [
								"Error"
							],
							"members": [
								{
									"kind": "field",
									"name": "name",
									"type": "string"
								},
								{
									"kind": "field",
									"name": "message",
									"type": "string"
								},
								{
									"kind": "field",
									"name": "actual",
									"type": "any"
								},
								{
									"kind": "field",
									"name": "expected",
									"type": "any"
								},
								{
									"kind": "field",
									"name": "operator",
									"type": "string"
								},
								{
									"kind": "field",
									"name": "generatedMessage",
									"type": "boolean"
								},
								{
									"kind": "constructor",
									"parameters": [
										{
											"name": "options",
											"optional": true,
											"type": {
												"kind": "object",
												"signatures": [
													{
														"kind": "property",
														"name": "message",
														"optional": true,
														"type": "string"
													},
													{
														"kind": "property",
														"name": "actual",
														"optional": true,
														"type": "any"
													},
													{
														"kind": "property",
														"name": "expected",
														"optional": true,
														"type": "any"
													},
													{
														"kind": "property",
														"name": "operator",
														"optional": true,
														"type": "string"
													},
													{
														"kind": "property",
														"name": "stackStartFunction",
														"optional": true,
														"type": "Function"
													}
												]
											}
										}
									]
								}
							]
						},
						{
							"kind": "function",
							"name": "fail",
							"parameters": [
								{
									"name": "actual",
									"optional": true,
									"type": "any"
								},
								{
									"name": "expected",
									"optional": true,
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								},
								{
									"name": "operator",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "ok",
							"parameters": [
								{
									"name": "value",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "equal",
							"parameters": [
								{
									"name": "actual",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "notEqual",
							"parameters": [
								{
									"name": "actual",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "deepEqual",
							"parameters": [
								{
									"name": "actual",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "notDeepEqual",
							"parameters": [
								{
									"name": "acutal",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "strictEqual",
							"parameters": [
								{
									"name": "actual",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "function",
							"name": "notStrictEqual",
							"parameters": [
								{
									"name": "actual",
									"type": "any"
								},
								{
									"name": "expected",
									"type": "any"
								},
								{
									"name": "message",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "void"
						},
						{
							"kind": "variable",
							"name": "throws",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": "Function"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": "RegExp"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": {
													"kind": "function",
													"parameters": [
														{
															"name": "err",
															"type": "any"
														}
													],
													"returns": "boolean"
												}
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									}
								]
							}
						},
						{
							"kind": "variable",
							"name": "doesNotThrow",
							"type": {
								"kind": "object",
								"signatures": [
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": "Function"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": "RegExp"
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									},
									{
										"kind": "call",
										"parameters": [
											{
												"name": "block",
												"type": "Function"
											},
											{
												"name": "error",
												"type": {
													"kind": "function",
													"parameters": [
														{
															"name": "err",
															"type": "any"
														}
													],
													"returns": "boolean"
												}
											},
											{
												"name": "message",
												"optional": true,
												"type": "string"
											}
										],
										"returns": "void"
									}
								]
							}
						},
						{
							"kind": "function",
							"name": "ifError",
							"parameters": [
								{
									"name": "value",
									"type": "any"
								}
							],
							"returns": "void"
						}
					]
				}
			],
			"exportName": "internal"
		},
		{
			"kind": "module",
			"name": "tty",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "net",
					"require": "net"
				},
				{
					"kind": "function",
					"name": "isatty",
					"parameters": [
						{
							"name": "fd",
							"type": "number"
						}
					],
					"returns": "boolean"
				},
				{
					"kind": "interface",
					"name": "ReadStream",
					"extends": [
						"net.Socket"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "isRaw",
							"type": "boolean"
						},
						{
							"kind": "method",
							"name": "setRawMode",
							"parameters": [
								{
									"name": "mode",
									"type": "boolean"
								}
							],
							"returns": "void"
						}
					]
				},
				{
					"kind": "interface",
					"name": "WriteStream",
					"extends": [
						"net.Socket"
					],
					"signatures": [
						{
							"kind": "property",
							"name": "columns",
							"type": "number"
						},
						{
							"kind": "property",
							"name": "rows",
							"type": "number"
						}
					]
				}
			]
		},
		{
			"kind": "module",
			"name": "domain",
			"external": true,
			"declares": [
				{
					"kind": "import",
					"name": "events",
					"require": "events"
				},
				{
					"kind": "class",
					"name": "Domain",
					"extends": "events.EventEmitter",
					"members": [
						{
							"kind": "method",
							"name": "run",
							"parameters": [
								{
									"name": "fn",
									"type": "Function"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "add",
							"parameters": [
								{
									"name": "emitter",
									"type": "events.EventEmitter"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "remove",
							"parameters": [
								{
									"name": "emitter",
									"type": "events.EventEmitter"
								}
							],
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "bind",
							"parameters": [
								{
									"name": "cb",
									"type": {
										"kind": "function",
										"parameters": [
											{
												"name": "err",
												"type": "Error"
											},
											{
												"name": "data",
												"type": "any"
											}
										],
										"returns": "any"
									}
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "intercept",
							"parameters": [
								{
									"name": "cb",
									"type": {
										"kind": "function",
										"parameters": [
											{
												"name": "data",
												"type": "any"
											}
										],
										"returns": "any"
									}
								}
							],
							"returns": "any"
						},
						{
							"kind": "method",
							"name": "dispose",
							"returns": "void"
						},
						{
							"kind": "method",
							"name": "addListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "Domain"
						},
						{
							"kind": "method",
							"name": "on",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "Domain"
						},
						{
							"kind": "method",
							"name": "once",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "Domain"
						},
						{
							"kind": "method",
							"name": "removeListener",
							"parameters": [
								{
									"name": "event",
									"type": "string"
								},
								{
									"name": "listener",
									"type": "Function"
								}
							],
							"returns": "Domain"
						},
						{
							"kind": "method",
							"name": "removeAllListeners",
							"parameters": [
								{
									"name": "event",
									"optional": true,
									"type": "string"
								}
							],
							"returns": "Domain"
						}
					]
				},
				{
					"kind": "function",
					"name": "create",
					"returns": "Domain"
				}
			]
		}
	]
}