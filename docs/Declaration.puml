@startuml

    interface SourceFile {
        references: string[]
        declares?: ModuleElementDeclaration[]
        export?: string
        external?: boolean
    }
    SourceFile *-- ModuleElementDeclaration

    interface Declaration {

        kind: string
    }

    interface ModuleElementDeclaration extends Declaration {

        name: string
        description?: string
    }

    interface EnumDeclaration extends ModuleElementDeclaration {

        kind: "enum"
        members: EnumMember[]
    }
    EnumDeclaration *-- EnumMember

    interface EnumMember {

        name: string
        value?: number
        description?: string
    }

    interface VariableDeclaration extends ModuleElementDeclaration {

        kind: "variable"
        type: TypeDeclaration
    }

    interface FunctionDeclaration extends ModuleElementDeclaration, CallSignatureDeclaration {

        kind: "function"
    }

    interface InterfaceDeclaration extends ModuleElementDeclaration {

        kind: "interface"
        typeParameters?: TypeParameterDeclaration[]
        extends?: TypeReferenceDeclaration[]
        signatures?: SignatureDeclaration[]
    }

    interface ClassDeclaration extends ModuleElementDeclaration {

        kind: "class"
        typeParameters?: TypeParameterDeclaration[]
        extends?: TypeReferenceDeclaration
        implements?: TypeReferenceDeclaration[]
        members?: MemberDeclaration[]
    }

    interface ModuleDeclaration extends ModuleElementDeclaration {

        kind: "module"
        declares?: ModuleElementDeclaration[]
        export?: string
        external?: boolean
    }

    interface ImportDeclaration extends ModuleElementDeclaration {

        kind: "import"
        export?: boolean
        value?: string;
        require?: string;
    }

@enduml